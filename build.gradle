plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.custom'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	// 내장 톰캣
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// 개발 hotswap
	implementation 'org.springframework.boot:spring-boot-devtools'

	// 롬복
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Swagger 3.0.0
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	// swagger 3.0.0 호환 문제로 validation 추가
	// implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'

	// swagger 관련 api dependency
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'

	// mybatis
	implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '3.0.3'

	// DB
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	//oracle
	implementation 'com.oracle.database.jdbc:ojdbc11:21.8.0.0'

	/**
	 * Spring Security
	 */
	implementation 'org.springframework.boot:spring-boot-starter-security'

	/**
	 * jwt
	 */
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	/**
	 * Json
	 */
	implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
	implementation 'com.googlecode.json-simple:json-simple:1.1'

	/**
	 * Tika
	 */
	implementation 'org.apache.tika:tika-core:2.9.0'

	/**
	 * lucy
	 */
	implementation 'com.navercorp.lucy:lucy-xss:1.6.3'
	implementation 'com.navercorp.lucy:lucy-xss-servlet:2.0.0'

	/**
	 * apache common
	 */
	implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'

	/**
	 * log4j
	 */
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

}

/**
 * 스프링 부트는 클래스 경로에 있는 경우 로깅 구성을 위해 Log4j2를 지원한다.
 * 종속 항목을 조립하기 위해 starter를 사용하는 경우 Logback을 제외하고 log4j2를 포함해야 한다.
 */
configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// gradle 은 main 에서 .java 만 빌드하며, xml 파일은 빌드하지 않음. ( intellij 에서 문제 발생 )
// 따라서 resoureces 폴더에 xml 파일을 만들어줄 필요가 있지만, project 구조를 그대로 가져오기 위하여 빌드 시,
// resources 폴더 아래에 xml 파일을 배치하도록 설정
sourceSets {
	main {
		resources {
			srcDirs = ["src/main/java", "src/main/resources"]
			exclude "**/*.java"
		}
	}
}